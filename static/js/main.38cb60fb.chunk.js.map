{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["filteredTodosList","value","todos","filter","todo","title","toLocaleLowerCase","includes","trim","TodoList","todoList","modalActive","query","option","activeTaskId","filteredTodos","completed","className","map","id","isDone","classNames","type","onClick","TodoFilter","handleQuery","handleOption","useState","setQuery","selectedOption","setSelectedOption","onChange","event","newOption","target","placeholder","newValue","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","user","setUser","useEffect","userId","href","email","name","App","loading","setLoading","list","setList","task","setTask","setOption","fetchData","a","console","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38cb60fb.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Options } from '../../types/Options';\n\ntype ListOfTodos = {\n  todoList: Todo[],\n  modalActive: (todo: Todo) => void;\n  query: string;\n  option: Options | null;\n  activeTaskId: number | null;\n};\n\nconst filteredTodosList = (value: string, todos: Todo[]) => {\n  return todos.filter(todo => todo.title\n    .toLocaleLowerCase().includes(value.trim().toLocaleLowerCase()));\n};\n\nexport const TodoList: React.FC<ListOfTodos>\n= ({\n  todoList, modalActive, query, option, activeTaskId,\n}) => {\n  const isDoneStyle = (isDone: boolean) => {\n    return classNames({\n      'has-text-danger': !isDone,\n      'has-text-success': isDone,\n    });\n  };\n\n  let filteredTodos: Todo[] = [];\n\n  switch (option) {\n    case 'all':\n      filteredTodos = filteredTodosList(query, todoList);\n      break;\n    case 'completed':\n      filteredTodos = filteredTodosList(query,\n        todoList).filter(todo => todo.completed === true);\n      break;\n    case 'active':\n      filteredTodos = filteredTodosList(query,\n        todoList).filter(todo => todo.completed === false);\n      break;\n    default:\n      filteredTodos = filteredTodosList(query, todoList);\n      break;\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => [\n          <>\n            <tr key={todo.id} data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : <td className=\"is-vcentered\" />}\n              <td className=\"is-vcentered is-expanded\">\n                <p className={isDoneStyle(todo.completed)}>{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => modalActive(todo)}\n                >\n                  <span className=\"icon\">\n                    {activeTaskId === todo.id ? (\n                      <i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                  </span>\n                </button>\n              </td>\n            </tr>\n            ,\n          </>,\n        ])}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { Options } from '../../types/Options';\n\ntype Props = {\n  handleQuery: (value: string) => void;\n  handleOption: (value: Options | null) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ handleQuery, handleOption }) => {\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState<Options\n  | null>(null);\n\n  const handleQueryValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n\n    setQuery(newValue);\n    handleQuery(newValue);\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n    handleQuery('');\n  };\n\n  const handleOptions = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newOption = event.target.value as Options;\n\n    setSelectedOption(newOption);\n\n    handleOption(newOption === 'all' ? null : newOption);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption || ''}\n            onChange={handleOptions}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryValue}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" />\n        </span>\n\n        <span className=\"icon is-right\">\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearQuery}\n              aria-label=\"Clear search\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, closeModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Options } from './types/Options';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [list, setList] = useState<Todo[]>([]);\n  const [task, setTask] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<Options | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const todos = await getTodos();\n\n        setList(todos);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Something bad happened!', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const modalActive = (todo: Todo) => {\n    setTask(todo);\n  };\n\n  const closeModal = () => {\n    setTask(null);\n  };\n\n  const handleQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleOption = (value: Options | null) => {\n    setOption(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleQuery={handleQuery}\n                handleOption={handleOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? <Loader /> : null}\n\n              <TodoList\n                todoList={list}\n                modalActive={(todo: Todo) => modalActive(todo)}\n                query={query}\n                option={option}\n                activeTaskId={task?.id || null}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {task && <TodoModal todo={task} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}